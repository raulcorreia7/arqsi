// <auto-generated />
using System;
using Closify.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Closify.Migrations
{
    [DbContext(typeof(ClosifyContext))]
    [Migration("20181008212130_test1.4")]
    partial class test14
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Closify.Models.Acabamento", b =>
                {
                    b.Property<int>("AcabamentoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("AcabamentoID");

                    b.ToTable("Acabamentos");
                });

            modelBuilder.Entity("Closify.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaID1");

                    b.Property<string>("Nome");

                    b.Property<int?>("SuperCatID");

                    b.HasKey("CategoriaID");

                    b.HasIndex("CategoriaID1");

                    b.HasIndex("SuperCatID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Closify.Models.Dimensao", b =>
                {
                    b.Property<int>("DimensaoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TipoValorAltura");

                    b.Property<int>("TipoValorComprimento");

                    b.Property<int>("TipoValorLargura");

                    b.HasKey("DimensaoID");

                    b.ToTable("Dimensao");
                });

            modelBuilder.Entity("Closify.Models.ItemDeProduto", b =>
                {
                    b.Property<int>("ItemDeProdutoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProdutoBaseProdutoID");

                    b.Property<int?>("ProdutoParteProdutoID");

                    b.HasKey("ItemDeProdutoID");

                    b.HasIndex("ProdutoBaseProdutoID");

                    b.HasIndex("ProdutoParteProdutoID");

                    b.ToTable("ItemsDeProduto");
                });

            modelBuilder.Entity("Closify.Models.Material", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcabamentoID");

                    b.Property<string>("Nome");

                    b.HasKey("MaterialID");

                    b.HasIndex("AcabamentoID");

                    b.ToTable("Materiais");
                });

            modelBuilder.Entity("Closify.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DimensaoID");

                    b.Property<int?>("MaterialID");

                    b.Property<string>("Nome");

                    b.Property<int?>("ProdutoID1");

                    b.HasKey("ProdutoID");

                    b.HasIndex("DimensaoID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("ProdutoID1");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Closify.Models.Restricao", b =>
                {
                    b.Property<int>("RestricaoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int?>("ItemDeProdutoID");

                    b.Property<string>("NomeRestricao");

                    b.Property<int?>("ProdutoBaseProdutoID");

                    b.Property<int?>("ProdutoParteProdutoID");

                    b.HasKey("RestricaoID");

                    b.HasIndex("ItemDeProdutoID");

                    b.HasIndex("ProdutoBaseProdutoID");

                    b.HasIndex("ProdutoParteProdutoID");

                    b.ToTable("Restricao");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Restricao");
                });

            modelBuilder.Entity("Closify.Models.ValorNumerico", b =>
                {
                    b.Property<int>("ValorNumericoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DimensaoID");

                    b.Property<int?>("DimensaoID1");

                    b.Property<int?>("DimensaoID2");

                    b.Property<double>("Valor");

                    b.HasKey("ValorNumericoID");

                    b.HasIndex("DimensaoID");

                    b.HasIndex("DimensaoID1");

                    b.HasIndex("DimensaoID2");

                    b.ToTable("ValorNumerico");
                });

            modelBuilder.Entity("Closify.Models.RestricaoGenerica", b =>
                {
                    b.HasBaseType("Closify.Models.Restricao");


                    b.ToTable("RestricaoGenerica");

                    b.HasDiscriminator().HasValue("RestricaoGenerica");
                });

            modelBuilder.Entity("Closify.Models.Categoria", b =>
                {
                    b.HasOne("Closify.Models.Categoria")
                        .WithMany("SubCategorias")
                        .HasForeignKey("CategoriaID1");

                    b.HasOne("Closify.Models.Categoria", "SuperCategoria")
                        .WithMany()
                        .HasForeignKey("SuperCatID");
                });

            modelBuilder.Entity("Closify.Models.ItemDeProduto", b =>
                {
                    b.HasOne("Closify.Models.Produto", "ProdutoBase")
                        .WithMany()
                        .HasForeignKey("ProdutoBaseProdutoID");

                    b.HasOne("Closify.Models.Produto", "ProdutoParte")
                        .WithMany()
                        .HasForeignKey("ProdutoParteProdutoID");
                });

            modelBuilder.Entity("Closify.Models.Material", b =>
                {
                    b.HasOne("Closify.Models.Acabamento", "Acabamento")
                        .WithMany()
                        .HasForeignKey("AcabamentoID");
                });

            modelBuilder.Entity("Closify.Models.Produto", b =>
                {
                    b.HasOne("Closify.Models.Dimensao", "Dimensao")
                        .WithMany()
                        .HasForeignKey("DimensaoID");

                    b.HasOne("Closify.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialID");

                    b.HasOne("Closify.Models.Produto")
                        .WithMany("Produtos")
                        .HasForeignKey("ProdutoID1");
                });

            modelBuilder.Entity("Closify.Models.Restricao", b =>
                {
                    b.HasOne("Closify.Models.ItemDeProduto")
                        .WithMany("Restricoes")
                        .HasForeignKey("ItemDeProdutoID");

                    b.HasOne("Closify.Models.Produto", "ProdutoBase")
                        .WithMany()
                        .HasForeignKey("ProdutoBaseProdutoID");

                    b.HasOne("Closify.Models.Produto", "ProdutoParte")
                        .WithMany()
                        .HasForeignKey("ProdutoParteProdutoID");
                });

            modelBuilder.Entity("Closify.Models.ValorNumerico", b =>
                {
                    b.HasOne("Closify.Models.Dimensao")
                        .WithMany("Altura")
                        .HasForeignKey("DimensaoID");

                    b.HasOne("Closify.Models.Dimensao")
                        .WithMany("Comprimento")
                        .HasForeignKey("DimensaoID1");

                    b.HasOne("Closify.Models.Dimensao")
                        .WithMany("Largura")
                        .HasForeignKey("DimensaoID2");
                });
#pragma warning restore 612, 618
        }
    }
}
